{"version":3,"sources":["Header.js","Timer.js","Show.js","maze.js","KeyBoard.js","Select.js","Answer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","React","Component","Timer","props","start","isCounting","incrementer","setInterval","setState","secondsElapsed","state","flag","stop","clearInterval","timerStart","e","keyCode","xIndex","console","log","document","getElementById","innerHTML","componentDidMount","addEventListener","bind","id","rowStyle","height","pointStyle","width","border","display","boxsizing","lineheight","Show","data","this","className","map","row","rowIndex","style","point","colIndex","road","yIndex","backgroundColor","DIRECTIONS","Maze","size","xSize","ySize","maze","Array","edgeArray","direction","nextXIndex","nextYIndex","judgeEdge","digableDirections","judgeCount","observingDirectionIndex","excludeDirection","judgeDirections","push","getMovableDirections","length","isDigable","digableDirection","nextPoint","hasDigableRoads","directions","Math","floor","random","digRoad","nextRestartPoint","getRestartPoint","candidateRestartPoint","createMaze","result","digMaze","KeyBoard","handleReseteMaze","newMaze","digGoal","keyDownAction","nextXPoint","nextYPoint","componentWillUnmount","removeEventListener","mode","onClick","Select","handleSizeChange","target","value","handleModeChange","prevState","onChange","Answer","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.be85204c.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Header extends React.Component {\n  render() {\n    return <header>迷路ゲーム</header>;\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flag: 0,\n      secondsElapsed: 0,\n    };\n    this.incrementer = null;\n    this.isCounting = false;\n    this.timerStart = this.timerStart.bind(this);\n  }\n\n  start = () => {\n    if (!this.isCounting) {\n      this.incrementer = setInterval(\n        () =>\n          this.setState({\n            secondsElapsed: this.state.secondsElapsed + 0.01,\n            flag: 1,\n          }),\n        10\n      );\n      this.isCounting = true;\n    }\n  };\n\n  stop = () => {\n    clearInterval(this.incrementer);\n    this.isCounting = false;\n  };\n\n  timerStart = (e) => {\n    if (e.keyCode === 38 && this.state.flag === 0) {\n      this.start();\n    } else if (this.props.xIndex === 0) {\n      this.stop();\n    }\n    console.log(this.state.secondsElapsed);\n    document.getElementById(\"showTimer\").innerHTML =\n      \"結果は\" + this.state.secondsElapsed + \"秒です\";\n  };\n\n  componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.timerStart);\n  };\n\n  render() {\n    return (\n      <div>\n        <h5>〈〈 Timer 〉〉</h5>\n        <div id=\"showTimer\"></div>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from \"react\";\nimport Timer from \"./Timer\";\n\nconst rowStyle = {\n  height: 12,\n};\n\nconst pointStyle = {\n  width: 12,\n  height: 12,\n  border: \"solid 1px gray\",\n  display: \"inline-block\",\n  boxsizing: \"border-box\",\n  lineheight: \"12px\",\n};\n\nclass Show extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const data = this.props.data;\n\n    return (\n      <div className=\"Show\">\n        <Timer xIndex={this.props.xIndex} />\n        <div>\n          {data.map((row, rowIndex) => {\n            return (\n              <div style={rowStyle} key={`row:${rowIndex}`}>\n                {row.map((point, colIndex) => {\n                  const road = point;\n                  return (\n                    <button\n                      key={`row:${rowIndex},col:${colIndex}`}\n                      className={\n                        rowIndex === this.props.xIndex &&\n                        colIndex === this.props.yIndex\n                          ? \"start\"\n                          : \"\"\n                      }\n                      style={{\n                        ...pointStyle,\n                        backgroundColor: road ? \"\" : \"black\",\n                      }}\n                    ></button>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Show;\n","const DIRECTION = 4;\nconst DIRECTIONS = [\n  [0, -1],\n  [1, 0],\n  [0, 1],\n  [-1, 0],\n];\n\nexport default class Maze {\n  constructor(size) {\n    this.xSize = size;\n    this.ySize = size;\n  }\n  // 迷路の土台を作成\n  createMaze() {\n    let maze = new Array(this.xSize);\n    for (let xIndex = 0; xIndex < this.xSize; xIndex++) {\n      maze[xIndex] = new Array(this.ySize);\n      for (let yIndex = 0; yIndex < this.ySize; yIndex++) {\n        maze[xIndex][yIndex] = false;\n      }\n    }\n    // スタート地点の穴掘り\n    // const startPoint = this.createStartPoint(size);\n    maze[this.xSize - 2][1] = true;\n    return maze;\n  }\n  // 壁の判定\n  judgeEdge(xIndex, yIndex) {\n    let edgeArray = [0, this.ySize - 1, this.xSize - 1, 0];\n    for (let direction = 0; direction < DIRECTION; direction++) {\n      if (\n        (direction % 2 === 0 && xIndex === edgeArray[direction]) ||\n        (direction % 2 === 1 && yIndex === edgeArray[direction])\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // 上下左右に対してその方向に進めるかを判定する\n  judgeDirections(xIndex, yIndex, direction, maze) {\n    let nextXIndex = xIndex + DIRECTIONS[direction][0];\n    let nextYIndex = yIndex + DIRECTIONS[direction][1];\n    if (\n      maze[nextXIndex][nextYIndex] === false &&\n      this.judgeEdge(nextXIndex, nextYIndex)\n    ) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * ある地点の座標について, その地点からまだ進める方向を格納した配列を返す\n   * @param  xIndex その時点でのx座標\n   * @param  yIndex その時点でのy座標\n   * @param  maze 迷路の配列\n   * @returns 配列(進める方向)\n   */\n  getMovableDirections(xIndex, yIndex, maze) {\n    let digableDirections = [];\n    for (let direction = 0; direction < DIRECTION; direction++) {\n      let judgeCount = 0;\n      for (\n        let observingDirectionIndex = 0;\n        observingDirectionIndex < DIRECTION;\n        observingDirectionIndex++\n      ) {\n        let excludeDirection = (observingDirectionIndex + 2) % 4;\n        if (this.judgeDirections(xIndex, yIndex, direction, maze)) {\n          let nextXIndex =\n            xIndex + DIRECTIONS[direction][0] + DIRECTIONS[excludeDirection][0];\n          let nextYIndex =\n            yIndex + DIRECTIONS[direction][1] + DIRECTIONS[excludeDirection][1];\n          if (!maze[nextXIndex][nextYIndex]) {\n            judgeCount++;\n          }\n        }\n      }\n      if (judgeCount === 3) {\n        digableDirections.push(direction);\n      }\n    }\n    return digableDirections;\n  }\n  // 穴掘りが可能かどうか判定する\n  isDigable(xIndex, yIndex, maze) {\n    if (\n      maze[xIndex][yIndex] &&\n      this.getMovableDirections(xIndex, yIndex, maze).length !== 0\n    ) {\n      return true;\n    }\n    return false;\n  }\n  // まだ掘れる場所があるかどうかの判定\n  hasDigableRoads(maze) {\n    for (let xIndex = 1; xIndex < this.xSize - 1; xIndex++) {\n      for (let yIndex = 1; yIndex < this.ySize - 1; yIndex++) {\n        if (this.isDigable(xIndex, yIndex, maze)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  // 引数の示す方向に道を作る\n  digRoad(xIndex, yIndex, digableDirection, maze) {\n    let nextPoint = [];\n    nextPoint[0] = xIndex + DIRECTIONS[digableDirection][0];\n    nextPoint[1] = yIndex + DIRECTIONS[digableDirection][1];\n    maze[nextPoint[0]][nextPoint[1]] = true;\n    return nextPoint;\n  }\n  // 迷路を作っていく\n  digMaze(maze) {\n    let xIndex = this.xSize - 2;\n    let yIndex = 1;\n    while (this.hasDigableRoads(maze)) {\n      let directions = this.getMovableDirections(xIndex, yIndex, maze);\n      if (directions.length > 0) {\n        let digableDirection = Math.floor(Math.random() * directions.length);\n        let nextPoint = this.digRoad(\n          xIndex,\n          yIndex,\n          directions[digableDirection],\n          maze\n        );\n        if (nextPoint.length > 0) {\n          xIndex = nextPoint[0];\n          yIndex = nextPoint[1];\n        }\n      } else if (directions.length === 0) {\n        let nextRestartPoint = this.getRestartPoint(maze);\n        if (nextRestartPoint !== 0) {\n          xIndex = nextRestartPoint[0];\n          yIndex = nextRestartPoint[1];\n        }\n      }\n    }\n    return maze;\n  }\n  // リスタート地点の取得\n  getRestartPoint(maze) {\n    let nextRestartPoint = [];\n    for (let xIndex = 1; xIndex < this.xSize - 1; xIndex++) {\n      for (let yIndex = 1; yIndex < this.ySize - 1; yIndex++) {\n        if (maze[xIndex][yIndex]) {\n          if (this.getMovableDirections(xIndex, yIndex, maze).length > 0) {\n            let candidateRestartPoint = [xIndex, yIndex];\n            nextRestartPoint.push(candidateRestartPoint);\n            break;\n          }\n        }\n      }\n    }\n    if (nextRestartPoint.length > 0) {\n      let restartPointIndex = Math.floor(\n        Math.random() * nextRestartPoint.length\n      );\n      return nextRestartPoint[restartPointIndex];\n    }\n    return 0;\n  }\n  // ゴールに道が続いている迷路ができるまで処理を実行する\n  digGoal() {\n    let maze = this.createMaze();\n    let result = this.digMaze(maze);\n    // 到達モード\n    while (!maze[1][this.ySize - 2]) {\n      maze = this.createMaze();\n      result = this.digMaze(maze);\n    }\n    result[this.xSize - 1][1] = true;\n    result[0][this.ySize - 2] = true;\n    return result;\n  }\n}\n","import React from \"react\";\nimport Show from \"./Show\";\nimport Maze from \"./maze\";\n\nclass KeyBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    const maze = new Maze(this.props.size);\n    this.xSize = this.props.size;\n    this.ySize = this.props.size;\n    this.state = {\n      data: maze.digGoal(),\n      xIndex: this.props.size - 1,\n      yIndex: 1,\n    };\n    this.keyDownAction = this.keyDownAction.bind(this);\n    this.handleReseteMaze = this.handleReseteMaze.bind(this);\n    console.log(this.props.mode);\n  }\n\n  handleReseteMaze = () => {\n    const newMaze = new Maze(this.props.size);\n    this.setState({\n      data: newMaze.digGoal(),\n      xIndex: this.props.size - 1,\n      yIndex: 1,\n    });\n  };\n\n  keyDownAction = (e) => {\n    let direction = [];\n    if (e.keyCode === 38 && this.state.xIndex > 0) {\n      direction = [-1, 0];\n    } else if (e.keyCode === 39 && this.state.yIndex < this.props.size - 1) {\n      direction = [0, 1];\n    } else if (e.keyCode === 40 && this.state.xIndex < this.props.size - 1) {\n      direction = [1, 0];\n    } else if (e.keyCode === 37 && this.state.yIndex > 0) {\n      direction = [0, -1];\n    } else {\n      direction = [0, 0];\n    }\n\n    const nextXPoint = this.state.xIndex + direction[0];\n    const nextYPoint = this.state.yIndex + direction[1];\n    let nextPoint = [];\n    if (this.state.data[nextXPoint][nextYPoint]) {\n      nextPoint = [nextXPoint, nextYPoint];\n    } else if (!this.state.data[nextXPoint][nextYPoint]) {\n      nextPoint = [this.state.xIndex, this.state.yIndex];\n    }\n    this.setState({\n      xIndex: nextPoint[0],\n      yIndex: nextPoint[1],\n    });\n  };\n\n  componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.keyDownAction);\n  };\n  componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.keyDownAction);\n  };\n\n  render() {\n    return (\n      <div className=\"keyboard\">\n        <button className=\"recreatebutton\" onClick={this.handleReseteMaze}>\n          作成\n        </button>\n        <Show\n          data={this.state.data}\n          size={this.props.size}\n          xIndex={this.state.xIndex}\n          yIndex={this.state.yIndex}\n        />\n        <h4>\n          モード {this.props.mode}\n          <br />\n          迷路サイズは {this.props.size} × {this.props.size} です\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default KeyBoard;\n","import React from \"react\";\nimport KeyBoard from \"./KeyBoard\";\n\nclass Select extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      size: 10,\n      mode: 1,\n    };\n    this.handleSizeChange = this.handleSizeChange.bind(this);\n    this.handleModeChange = this.handleModeChange.bind(this);\n  }\n\n  handleSizeChange = (e) => {\n    this.setState({\n      size: e.target.value,\n    });\n  };\n\n  handleModeChange = (e) => {\n    this.setState((prevState) => {\n      prevState.mode = e.target.value;\n      return { mode: prevState.mode };\n    });\n\n    console.log(\"e : \" + e.target.value + \" mode : \" + this.state.mode);\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>迷路オプション</h3>\n        <ul className=\"list\">\n          <li>\n            迷路サイズ:{\" \"}\n            <select className=\"selectSize\" onChange={this.handleSizeChange}>\n              <option value=\"\">--サイズ選択--</option>\n              <option value=\"10\">10 × 10</option>\n              <option value=\"20\">20 × 20</option>\n              <option value=\"30\">30 × 30</option>\n              <option value=\"40\">40 × 40</option>\n              <option value=\"50\">50 × 50</option>\n            </select>\n          </li>\n          <li>\n            モード選択:{\" \"}\n            <select className=\"selectMode\" onChange={this.handleModeChange}>\n              <option value=\"\">--モードを選択--</option>\n              <option value=\"1\">到達モード ⇨ モード1</option>\n              <option value=\"2\">最長モード　→　モード2</option>\n            </select>\n          </li>\n        </ul>\n        <br />\n        <KeyBoard size={this.state.size} mode={this.state.mode} />\n      </div>\n    );\n  }\n}\n\nexport default Select;\n","import React from \"react\";\n\nclass Answer extends React.Component {\n  render() {\n    return (\n      <div className=\"answer\">\n        <button href=\"/\">迷路の解答</button>\n      </div>\n    );\n  }\n}\n\nexport default Answer;\n","import React from \"react\";\nimport Select from \"./Select\";\nimport Answer from \"./Answer\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Select />\n        <Answer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Header from \"./Header\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}